<UserControl x:Class="PlayGround.View.AdminSettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PlayGround.View"
             mc:Ignorable="d" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
             TextElement.FontWeight="Regular"
             TextElement.FontSize="13"
             TextOptions.TextFormattingMode="Ideal" 
             TextOptions.TextRenderingMode="Auto"        
             Background="{DynamicResource MaterialDesignPaper}"
             FontFamily="{DynamicResource MaterialDesignFont}"
             d:DesignHeight="750" d:DesignWidth="1100">

    <Grid>
        <materialDesign:Card HorizontalAlignment="Center" Margin="200,0,0,410" VerticalAlignment="Center" Height="310" Width="500">
            <materialDesign:Card.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="20"/>
                </Style>
            </materialDesign:Card.Resources>
            <StackPanel>
                <Label Content="Name" Margin="25,10,0,0"></Label>
                <StackPanel>
                    <materialDesign:PackIcon Kind="User" Width="25" Height="25" Foreground="Green" Margin="5,5,0,0"/>
                    <TextBox x:Name="txtName" Text="" FontSize="20" Width="400" Height="36" Margin="0,-29,0,0" Style="{DynamicResource MaterialDesignOutlinedTextFieldTextBox}" TextAlignment="Center" VerticalAlignment="Stretch" VerticalContentAlignment="Center" materialDesign:HintAssist.Hint="Enter Username" >
                        <TextBox.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="20"/>
                            </Style>
                        </TextBox.Resources>
                    </TextBox>
                </StackPanel>
                <Label Content="Email" Margin="25,3,0,0"></Label>
                <StackPanel>
                    <materialDesign:PackIcon Kind="Email" Width="25" Height="25" Foreground="Green" Margin="5,5,0,0"/>
                    <TextBox x:Name="txtEmail" Text="" FontSize="20" Width="400" Height="36" Margin="0,-29,0,0" Style="{DynamicResource MaterialDesignOutlinedTextFieldTextBox}" TextAlignment="Center" VerticalAlignment="Stretch" VerticalContentAlignment="Center" materialDesign:HintAssist.Hint="Enter Email" >
                        <TextBox.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="20"/>
                            </Style>
                        </TextBox.Resources>
                    </TextBox>
                </StackPanel>
                <Label Content="Phone Number" Margin="25,3,0,0"></Label>
                <StackPanel>
                    <materialDesign:PackIcon Kind="Phone" Width="25" Height="25" Foreground="Green" Margin="5,5,0,0"/>
                    <TextBox x:Name="txtPhoneNumber" Text="" FontSize="20" Width="400" Height="36" Margin="0,-29,0,0" Style="{DynamicResource MaterialDesignOutlinedTextFieldTextBox}" TextAlignment="Center" VerticalAlignment="Stretch" VerticalContentAlignment="Center" materialDesign:HintAssist.Hint="Enter Phone Number" >
                        <TextBox.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="20"/>
                            </Style>
                        </TextBox.Resources>
                    </TextBox>
                </StackPanel>
                <StackPanel>
                    <Button Content="Save Changes" x:Name="btnSaveChanges" FontSize="16" FontWeight="Bold" Margin="0,30,0,0"  Foreground="White" Background="DarkGreen" RenderTransformOrigin="0.582,0.626" Style="{DynamicResource RoundCorner}" Height="36" Width="198">
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="15"/>
                            </Style>
                        </Button.Resources>
                    </Button>
                </StackPanel>
            </StackPanel>
        </materialDesign:Card>
        <materialDesign:Card HorizontalAlignment="Left" Margin="400,230,0,0" VerticalAlignment="Center" Height="300" Width="500">
            <materialDesign:Card.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="20"/>
                </Style>
            </materialDesign:Card.Resources>
            <StackPanel>
            <Label Content="Current Password" Margin="25,5,0,0"></Label>
            <StackPanel>
                <materialDesign:PackIcon Kind="Password" Width="25" Height="25" Foreground="Green" Margin="5,5,0,0"/>
                    <PasswordBox x:Name="txtCurrentPassword" FontSize="20" Width="350" Height="36" Margin="-500,-30,-450,0" VerticalContentAlignment="Center">
                        <PasswordBox.Style>
                            <Style TargetType="{x:Type PasswordBox}">
                                <Style.Resources>
                                    <Style TargetType="Border">
                                        <Setter Property="CornerRadius" Value="8" />
                                    </Style>
                                </Style.Resources>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type PasswordBox}">
                                            <Border x:Name="border" CornerRadius="20" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                                                </Trigger>
                                                <Trigger Property="IsKeyboardFocused" Value="true">
                                                    <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                                            <Condition Property="IsSelectionActive" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                    </MultiTrigger>
                                </Style.Triggers>
                            </Style>
                        </PasswordBox.Style>
                    </PasswordBox>
            </StackPanel>
            <Label Content="New Password" Margin="25,0,0,0"></Label>
            <StackPanel>
                <materialDesign:PackIcon Kind="Password" Width="25" Height="25" Foreground="Green" Margin="5,5,0,0"/>
                    <PasswordBox x:Name="txtNewPassword" FontSize="20" Width="350" Height="36" Margin="-500,-30,-450,0" VerticalContentAlignment="Center" >
                        <PasswordBox.Style>
                            <Style TargetType="{x:Type PasswordBox}">
                                <Style.Resources>
                                    <Style TargetType="Border">
                                        <Setter Property="CornerRadius" Value="8" />
                                    </Style>
                                </Style.Resources>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type PasswordBox}">
                                            <Border x:Name="border" CornerRadius="20" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                                                </Trigger>
                                                <Trigger Property="IsKeyboardFocused" Value="true">
                                                    <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                                            <Condition Property="IsSelectionActive" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                    </MultiTrigger>
                                </Style.Triggers>
                            </Style>
                        </PasswordBox.Style>
                    </PasswordBox>
                </StackPanel>
            <Label Content="Confirm Password" Margin="25,0,0,0"></Label>
            <StackPanel>
                <materialDesign:PackIcon Kind="Password" Width="25" Height="25" Foreground="Green" Margin="5,5,0,0"/>
                    <PasswordBox x:Name="txtConfirmPassword" FontSize="20" Width="350" Height="36" Margin="-500,-30,-450,0" VerticalContentAlignment="Center" >
                        <PasswordBox.Style>
                            <Style TargetType="{x:Type PasswordBox}">
                                <Style.Resources>
                                    <Style TargetType="Border">
                                        <Setter Property="CornerRadius" Value="8" />
                                    </Style>
                                </Style.Resources>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type PasswordBox}">
                                            <Border x:Name="border" CornerRadius="20" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                                                </Trigger>
                                                <Trigger Property="IsKeyboardFocused" Value="true">
                                                    <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                                            <Condition Property="IsSelectionActive" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                    </MultiTrigger>
                                </Style.Triggers>
                            </Style>
                        </PasswordBox.Style>
                    </PasswordBox>
                </StackPanel>
            <StackPanel>
                <Button Content="Update" x:Name="btnUpdate" FontSize="16" FontWeight="Bold" Margin="0,30,0,0"  Foreground="White" Background="DarkGreen" RenderTransformOrigin="0.582,0.626" Style="{DynamicResource RoundCorner}" Height="36" Width="198">
                    <Button.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="15"/>
                        </Style>
                    </Button.Resources>
                </Button>
            </StackPanel>
                </StackPanel>
        </materialDesign:Card>
        <materialDesign:Card HorizontalAlignment="Left" Margin="20,-400,0,0" VerticalAlignment="Center" Height="300" Width="350">
            <materialDesign:Card.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="20"/>
                </Style>
            </materialDesign:Card.Resources>
            <StackPanel>
                <StackPanel Width="350" Margin="0,0,0,0">
                    <Ellipse HorizontalAlignment="Left" Margin="75,10,0,0" Height="200" Width="200">
                        <Ellipse.Fill>
                            <ImageBrush ImageSource="/Assets/Avatar.jpg"/>
                        </Ellipse.Fill>
                    </Ellipse>
                    <Button Content="Browse Image" x:Name="btnBrowserImage" FontSize="16" FontWeight="Bold" Margin="0,30,0,0"  Foreground="White" Background="DarkGreen" RenderTransformOrigin="0.582,0.626" Style="{DynamicResource RoundCorner}" Height="36" Width="198">
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="15"/>
                            </Style>
                        </Button.Resources>
                    </Button>
                </StackPanel>
            </StackPanel>
        </materialDesign:Card>
    </Grid>
</UserControl>
